name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push backend Docker image
        env:
          ECR_REPOSITORY: lms-backend-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY:latest -t $ECR_REPOSITORY:$IMAGE_TAG ./LMS_BACKEND
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${{ steps.login-ecr.outputs.repository }}:$IMAGE_TAG
          docker tag $ECR_REPOSITORY:latest ${{ steps.login-ecr.outputs.registry }}/${{ steps.login-ecr.outputs.repository }}:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ steps.login-ecr.outputs.repository }}:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ steps.login-ecr.outputs.repository }}:latest

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-push-backend

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy backend to AWS Elastic Beanstalk
        env:
          APPLICATION_NAME: 'lms-backend-api'
          ENVIRONMENT_NAME: 'lms-backend-api-env'
          IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/lms-backend-repo:${{ github.sha }}
        run: |
          aws elasticbeanstalk update-environment --application-name $APPLICATION_NAME --environment-name $ENVIRONMENT_NAME --version-label $GITHUB_SHA --option-settings Namespace=aws:elasticbeanstalk:container:docker,OptionName=Image,Value=$IMAGE_URI
