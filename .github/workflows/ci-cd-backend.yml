name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.BACKEND_ENV.DOCKER_USERNAME }}
          password: ${{ secrets.BACKEND_ENV.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
           context: ./LMS_BACKEND
           push: true
           tags: ${{ secrets.BACKEND_ENV.DOCKER_USERNAME }}/lms-backend:latest

  deploy-backend:
    needs: build-and-push-backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install awscli
          aws --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BACKEND_ENV.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BACKEND_ENV.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2  

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Deploy to EC2
        env:
          ACCESS_KEY: ${{ secrets.BACKEND_ENV.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.BACKEND_ENV.SECRET_KEY }}
          SERVICE_URL: ${{ secrets.BACKEND_ENV.SERVICE_URL }}
          EMAILADMIN: ${{ secrets.BACKEND_ENV.EMAILADMIN }}
        run: |
          ssh -o "StrictHostKeyChecking=no" ec2-user@${{ secrets.BACKEND_ENV.EC2_IP }} << 'EOF'
            docker pull ${{ secrets.BACKEND_ENV.DOCKER_USERNAME }}/lms-backend:latest
            docker stop lms-backend-container || true
            docker rm lms-backend-container || true
            docker run -d -p 80:80 \
              -e ACCESS_KEY=${{ secrets.BACKEND_ENV.ACCESS_KEY }} \
              -e SECRET_KEY=${{ secrets.BACKEND_ENV.SECRET_KEY }} \
              -e SERVICE_URL=${{ secrets.BACKEND_ENV.SERVICE_URL }} \
              -e EMAILADMIN=${{ secrets.BACKEND_ENV.EMAILADMIN }} \
              --name lms-backend-container ${{ secrets.BACKEND_ENV.DOCKER_USERNAME }}/lms-backend:latest
          EOF
